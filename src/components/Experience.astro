---
import classNames from "classnames";
import { format } from "date-fns";
import { type Experience } from "../pages/api/experiences";
import ExternalLink from "./ExternalLink.astro";

interface Props {
    experience: Experience;
}

const { experience } = Astro.props;

const { company, positions, hideWhenPrinting } = experience;
---

<li class={classNames(hideWhenPrinting && "print:hidden")}>
    <div class="flex gap-1 flex-col">
        <div class="flex justify-between flex-grow items-center">
            <div class="flex-grow">
                <h3 class="text-xl">
                    {
                        company.link ? (
                            <ExternalLink
                                href={company.link}
                                title={`To ${company.name}`}
                            >
                                {company.name}
                            </ExternalLink>
                        ) : (
                            company.name
                        )
                    }
                </h3>
            </div>

            <div class="text-sm text-gray-500">
                {company.location}
            </div>
        </div>

        <div class="flex flex-col gap-1">
            {
                positions.map((position, index) => (
                    <div
                        class={classNames(
                            position.hideWhenPrinting && "print:hidden"
                        )}
                    >
                        {/* Use flex to align title and date on the same line */}
                        <div class="flex justify-between items-center">
                            <div>
                                <b>{position.title}</b>
                            </div>

                            <div class="text-right text-sm text-gray-500">
                                <span class="block">
                                    {/* Inline-block helps not break between years and months on mobile, see
                    https://stackoverflow.com/questions/18222409/specifying-a-preferred-line-break-point-in-html-text-in-a-responsive-design */}
                                    <time
                                        datetime={position.startDate.toISOString()}
                                        class="inline-block"
                                    >
                                        {format(position.startDate, "MMM y")}
                                    </time>{" "}
                                    -{" "}
                                    {position.endDate ? (
                                        <time
                                            datetime={position.endDate.toISOString()}
                                            class="inline-block"
                                        >
                                            {format(position.endDate, "MMM y")}
                                        </time>
                                    ) : (
                                        "Present"
                                    )}
                                </span>
                            </div>
                        </div>

                        <div>{position.description}</div>
                    </div>
                ))
            }
        </div>
    </div>
</li>
